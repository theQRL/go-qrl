version: 2
jobs:
  build:
    docker:
      - image: qrledger/qrl-docker:xenial
    steps:
      - checkout
      - run: add-apt-repository ppa:ubuntu-toolchain-r/test -y
      - run: apt update
      - run: apt install g++-7 -y
      - run: update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 60 --slave /usr/bin/g++ g++ /usr/bin/g++-7
      - run: git submodule update --init --recursive
      - run: cd / && curl -O https://storage.googleapis.com/golang/go1.8.linux-amd64.tar.gz && tar zxvf go1.8.linux-amd64.tar.gz
      - run:
          name: Setting up Environment Variables for Golang
          command: |
            echo 'export GOROOT="/go"' >> $BASH_ENV
            echo 'export PATH="$PATH:/go/bin/"' >> $BASH_ENV
      - run: go get github.com/magiconair/properties/assert
      - run: mkdir -p ~/go/src/github.com/theQRL/go-qrl
      - run: cp -r . ~/go/src/github.com/theQRL/go-qrl/
      - run: cd ~/go/src/github.com/theQRL && git clone https://github.com/cyyber/qrllib && cd qrllib && git submodule update --init
      - run: cd ~/go/src/github.com/theQRL/qrllib/ && cmake -DBUILD_GO=ON && make
      - run: cd ~/go/src/github.com/theQRL && git clone https://github.com/cyyber/qryptonight && cd qryptonight && git submodule update --init
      - run: cd ~/go/src/github.com/theQRL/qryptonight/ && cmake -DBUILD_GO=ON -DSANITIZE_ADDRESS=ON -DCMAKE_C_COMPILER=gcc-5 -DCMAKE_CXX_COMPILER=g++-5 && make
      - run: cd ~/go/src/github.com/theQRL/go-qrl && go get -v -t -d ./...
      - run: cd ~/go/src/github.com/theQRL/go-qrl && go test -v ./...

workflows:
  version: 2
  build_all:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
